from concurrent.futures import ThreadPoolExecutor
import time


def kvadrat(x):  
    return x * x
 
numbers = range(10001)

start_time = time.time()
results = [kvadrat(x) for x in numbers]
end_time = time.time()
no_threads_time = end_time - start_time

start_time = time.time()
with ThreadPoolExecutor(max_workers=10) as pool:
    results_t = list(pool.map(kvadrat, numbers))
end_time = time.time()
threads_time = time.time() - start_time
 
print(results)
print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –ø–æ—Ç–æ–∫–∞–º–∏: {threads_time} —Å–µ–∫—É–Ω–¥ü´Ö")
print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±–µ–∑ –ø–æ—Ç–æ–∫–æ–≤: {no_threads_time} —Å–µ–∫—É–Ω–¥ü•∫")